/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfazknn;

import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.jfree.ui.RefineryUtilities;
/**
 *
 * @author fccbuap
 */
public class VentanaNumUno extends javax.swing.JFrame {
    NumVecinos a=null;  
    NumVecinos Vecinoscnn=null;
    NumFolds as=null;
    String []arregloIndices;
    String [][] ConjuntoS;
    String ConjuntoT,ConjuntoP;
    int Vecinos;
    int opciones=0;
    int banderaConT=0,banderaConP=0,banderaVecinos=0,banderaPrueba=0,banderaGrafica=0;
    String presicionPvsT="",presicionPvsS="";
    int numeroElementosS=0;
    int [] vectordeIndices;
    int banderaConS=0;
    /*
 Archivo de texto con la siguiente información en cada renglón:
-Porcentaje de precisión al clasificar (con k-vecinos cercanos) P con T
-Porcentaje de precisión al clasificar (con k-vecinos cercanos) P con S
-Índices de los elementos (separados por “,”) en T que fueron seleccionados por CNN.
-Tamaño (número de elementos) de S. 
    */
    
    
    /**
     * Creates new form VentanaNumUno
     */
    public VentanaNumUno() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BotonStart = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Consola = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        Archivo = new javax.swing.JButton();
        Salir1 = new javax.swing.JButton();
        Reset1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Clasificador K-Vecinos Cercanos");
        setBackground(new java.awt.Color(28, 4, 249));
        setForeground(new java.awt.Color(232, 19, 19));
        setMinimumSize(new java.awt.Dimension(465, 420));
        getContentPane().setLayout(null);

        BotonStart.setText("Start");
        BotonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonStartActionPerformed(evt);
            }
        });
        getContentPane().add(BotonStart);
        BotonStart.setBounds(12, 120, 79, 72);

        Consola.setColumns(20);
        Consola.setRows(5);
        jScrollPane1.setViewportView(Consola);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(12, 220, 439, 140);

        jButton1.setText("Use Trainig Set");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(307, 162, 144, 30);

        jButton2.setText("Open File");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(97, 162, 204, 30);

        jButton3.setText("Validacion Cruzada");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(307, 120, 144, 30);

        jButton4.setText("Supplied Test Set");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(97, 120, 204, 30);

        jLabel1.setText("Consola:");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(12, 198, 59, 16);

        jLabel2.setText("Clasificador:  K-Nearest Neighbor");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(68, 12, 235, 16);

        jButton5.setText("Use CNN");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(307, 38, 144, 70);

        jButton6.setText("Config");
        jButton6.setBorder(new javax.swing.border.MatteBorder(null));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(12, 40, 79, 23);

        jButton7.setText("Graphic");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(97, 40, 204, 23);

        Archivo.setText("Archivo");
        Archivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArchivoActionPerformed(evt);
            }
        });
        getContentPane().add(Archivo);
        Archivo.setBounds(210, 70, 90, 36);

        Salir1.setText("Salir");
        Salir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Salir1ActionPerformed(evt);
            }
        });
        getContentPane().add(Salir1);
        Salir1.setBounds(12, 72, 79, 36);

        Reset1.setText("Reset");
        Reset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Reset1ActionPerformed(evt);
            }
        });
        getContentPane().add(Reset1);
        Reset1.setBounds(100, 70, 90, 36);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonStartActionPerformed
        
        
        if(banderaConT==0){
        JOptionPane.showMessageDialog(null, "No ha introducido un archivo-");
        }
        else
        {
         if(banderaVecinos==0){
            JOptionPane.showMessageDialog(null, "Coloque un numero de vecinos"); 
         }
         else{
             
           if(banderaPrueba==0){ 
               JOptionPane.showMessageDialog(null, "Coloque un archivo de prueba"); 
           }
          else{    
        if(opciones==0){
        LeerArchivo ConjuntoTx = new LeerArchivo("Conjunto T",ConjuntoT);
	LeerArchivo ConjuntoPx = new LeerArchivo("Conjunto P",ConjuntoP);
	ConjuntoTx.longitudMatriz();
	ConjuntoPx.longitudMatriz();
	ConjuntoTx.relacionarArchivo();
	ConjuntoPx.relacionarArchivo();
	//Adicionalmente alas matrices le mandamos el vector del conjunto TNumVecinos a 
	KNN prueba= new KNN(ConjuntoTx.mostrarMatriz(),ConjuntoPx.mostrarMatriz(),ConjuntoTx.getVectorAtributos(),a.getVecinos());	
	
        presicionPvsT=prueba.distanciaKNN()+" %";
        Consola.setText("Conjunto P respecto a T\n\nPrecision: "+presicionPvsT);
        Consola.setText(Consola.getText()+"\nNumero de Vecinos:  "+prueba.numKNN);
        Consola.setText(Consola.getText()+"\nClasificaciones Correctas: "+prueba.valorClasificado2+"\nClasificaciones Incorrectas: "+(prueba.ConjuntoP.length-prueba.valorClasificado2)+"\nTotal de Instancias en P: "+(prueba.ConjuntoP.length));
        String Anterior=Consola.getText();
 
        LeerArchivo ConjuntoSx = new LeerArchivo("Conjunto T","/home/erick/Documentos/ConjuntoS.txt");
	LeerArchivo ConjuntoPxt = new LeerArchivo("Conjunto P",ConjuntoP);
	ConjuntoSx.longitudMatriz();
	ConjuntoPxt.longitudMatriz();
	ConjuntoSx.relacionarArchivo();
	ConjuntoPxt.relacionarArchivo();
        ConjuntoS=ConjuntoSx.mostrarMatriz();
        KNN pruebaConS= new KNN(ConjuntoSx.mostrarMatriz(),ConjuntoPxt.mostrarMatriz(),ConjuntoSx.getVectorAtributos(),a.getVecinos());	
        presicionPvsS=pruebaConS.distanciaKNN()+" %";
        Consola.setText(Consola.getText()+"\n\nConjunto P respecto a S\n\nPrecision: "+presicionPvsS);
        Consola.setText(Consola.getText()+"\nNumero de Vecinos:  "+pruebaConS.numKNN);
        Consola.setText(Consola.getText()+"\nClasificaciones Correctas: "+pruebaConS.valorClasificado2+"\nClasificaciones Incorrectas: "+(pruebaConS.ConjuntoP.length-pruebaConS.valorClasificado2)+"\nTotal de Instancias en P: "+(pruebaConS.ConjuntoP.length));
        Consola.setText(Consola.getText()+"\n\nNUmero de Intancias en S: "+ConjuntoS.length+"\n\nLista de Indices: \n");
        
        for(int i=0;i<arregloIndices.length;i++){
            if(i<arregloIndices.length-1){
            Consola.setText(Consola.getText()+arregloIndices[i]+",");
            }
            else{
            Consola.setText(Consola.getText()+arregloIndices[i]); 
            }
                }
        
        
        
        }
        
        if(opciones==1){
           kFolds();
        }
        opciones=0;
         }
         }
        }
      
        
        
        

// TODO add your handling code here:
    }//GEN-LAST:event_BotonStartActionPerformed

    
    public void EscribeArchivoS(String [][] S,String nombreArchivo,String []Valores)
    {
        FileWriter fichero=null;
	PrintWriter pw = null;
	try{
            fichero=new FileWriter("/home/erick/Documentos/"+nombreArchivo);
            pw= new PrintWriter(fichero);
            pw.println(S.length);
            pw.println(S[0].length);
            for(int a=0;a<Valores.length;a++){
                if(a<Valores.length-1){
                	pw.print(Valores[a]+",");
                    }   
                    else{
                        pw.print(Valores[a]);
                    }
            }
            pw.println();
            for(int j=0;j<S.length;j++){
            for (int i=0;i<S[0].length;i++ ) {
                    if(i<S[0].length-1){
                	pw.print(S[j][i]+",");
                    }   
                    else{
                        pw.print(S[j][i]);
                    }
                    }
            pw.println();
            }
	}
		catch(Exception e){e.printStackTrace();}
		finally {
			try{
				if (null !=fichero) {
					fichero.close();
				}
			}catch(Exception e2){e2.printStackTrace();}
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        FileReader h = null;
                JFileChooser selArchivo;
                File a;
                String cadena =null;
                int x=-1,conta=0;
                try {
                    selArchivo= new JFileChooser();
                    selArchivo.showOpenDialog(null);
                    a = selArchivo.getSelectedFile();
                    ConjuntoT= a.getPath();
                }catch(NullPointerException e){
                    System.out.println("Cancelado");
                }
             banderaConT=1;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
                FileReader h = null;
                // TODO add your handling code here:
                JFileChooser selArchivo;
                File a;
                String cadena =null;
                int x=-1,conta=0;
                try {
                    selArchivo= new JFileChooser();
                    selArchivo.showOpenDialog(null);
                    a = selArchivo.getSelectedFile();
                    ConjuntoP= a.getPath();
                }catch(NullPointerException e){
                    System.out.println("Cancelado");
                }
                banderaPrueba=1;
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ConjuntoP=ConjuntoT;
        banderaPrueba=1;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        
        int bandera=0;
        a=new NumVecinos();
        a.setVisible(true);
        banderaVecinos=1;
// TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    public void kFolds(){
        KNN pruebaDos = null;
        int numKFOLDS = as.getFolds();
        String [][] origen;
        String [][] ConT;
        String [][] ConP;
        int z=0,f=0,cont=0;
        int c=0,x=0,instaCo=0,y=0,xy=0;
        int bandera=0,bandera2=0;
        double sumaPrecision=0.0;
        LeerArchivo ConjuntoTxt = new LeerArchivo("Conjunto T",ConjuntoT);
	ConjuntoTxt.longitudMatriz();
	ConjuntoTxt.relacionarArchivo();
        origen=ConjuntoTxt.mostrarMatriz();//Esta es una matrix
        f=(origen.length/numKFOLDS);
     for(int s=0;s<numKFOLDS;s++)
          {
          ConP=new String[f][origen[0].length];
          ConT=new String[origen.length-f][origen[0].length];
          
              for(int j=0;j<origen.length;j++){//de 0 hasta 149
                  for(int b=0;b<origen[0].length;b++){ //de 0 hasta 4
                    if(c>=cont && c<cont+f){
                    	bandera2=1;
                        ConP[xy][b]=origen[j][b];
                   		bandera=0;
                    }else{ 
                    	bandera2=0;
                    	bandera=1;
                        ConT[y][b]=origen[j][b];
                    }
                   }
                   if(bandera==1){y++;}
                   if(bandera2==1){xy++;}
                c++;
            }
        y=0;
        c=0;
        xy=0;
       cont=cont+f;
      pruebaDos= new KNN(ConT,ConP,ConjuntoTxt.getVectorAtributos(),a.getVecinos());	
      sumaPrecision=sumaPrecision+pruebaDos.distanciaKNN();
      instaCo=instaCo+pruebaDos.valorClasificado2;
       ConP=null;
       ConT=null;
    }   
     System.out.println("sumaPrecision: "+(sumaPrecision/numKFOLDS));
     Consola.setText("Precision: "+(sumaPrecision/numKFOLDS));
     Consola.setText(Consola.getText()+" %\nNumero de Vecinos:  "+pruebaDos.numKNN);
     Consola.setText(Consola.getText()+"\nClasificaciones Correctas: "+instaCo+"\nClasificaciones Incorrectas: "+(origen.length-instaCo));
        
    }
@SuppressWarnings("empty-statement")
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
   opciones=1;
   as=new NumFolds();
   as.setVisible(true);
    banderaPrueba=1;
 //System.out.println("Precision media:  "+sumaPrecision/numKFOLDS);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        //Cuando aplique CNN 
        if(banderaVecinos==0){
        JOptionPane.showMessageDialog(null, "No ha introducido un Numero de Vecinos");
        }
        else{
            if(banderaConT==0){
            JOptionPane.showMessageDialog(null, "No ha introducido un archivo");
            }
            else{
        LeerArchivo ConjuntoTx = new LeerArchivo("Conjunto T",ConjuntoT);
	ConjuntoTx.longitudMatriz();
	ConjuntoTx.relacionarArchivo();
        CNN nue=new CNN(ConjuntoTx.mostrarMatriz(),a.numeroVecinosCNN,ConjuntoTx.getVectorAtributos());
        EscribeArchivoS(nue.aplicarCNN(),"ConjuntoS.txt",ConjuntoTx.getVectorAtributos()); 
        arregloIndices=nue.arregloIndices;   
       
        
            }
        }
        
        banderaConS=1;

    }//GEN-LAST:event_jButton5ActionPerformed

    private void ArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArchivoActionPerformed
    
    FileWriter fichero=null;
	PrintWriter pw = null;
	try{
            fichero=new FileWriter("/home/erick/Documentos/ArchivoSalida.txt");
            pw= new PrintWriter(fichero);
            pw.println("Archivo de Salida:\n\n");
            pw.println("Presision conjunto P vs Conjunto T: "+presicionPvsT+"\n");
            pw.println("Presicion conjunto P vs Conjunto S: "+presicionPvsS+"\n");
            pw.println();
            pw.println("Lista de Indices que se clasificaron incorrectamente: \n\n");
            for(int i=0;i<arregloIndices.length;i++)
            {
               if(i<arregloIndices.length-1)
                {
                    pw.print(arregloIndices[i]+",");
                }
               else{
                pw.print(arregloIndices[i]+"");
               } 
            }
            pw.println();
            pw.println("\n\nNumero de Elementos de S:  "+ConjuntoS.length);
            
            
        
            }
        
        catch(Exception e){e.printStackTrace();}
		finally {
			try{
				if (null !=fichero) {
					fichero.close();
				}
			}catch(Exception e2){e2.printStackTrace();}
        }
       //Reiniciamos todos los valores        
    }//GEN-LAST:event_ArchivoActionPerformed

    private void Salir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Salir1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_Salir1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
//Para que pueda poner las graficas necesito que Conjunto P y Conjunto T tengan datos 
if (banderaConT==0 || banderaConT==0){
//Si uno de los dos no tiene nada  entonces no podemos graficar
    JOptionPane.showMessageDialog(null, "No se puede Graficar :( ");  
}
else{
banderaGrafica=1;
        LeerArchivo ConjuntoTxt = new LeerArchivo("Conjunto T",ConjuntoT);
	LeerArchivo ConjuntoPxt = new LeerArchivo("Conjunto S","/home/erick/Documentos/ConjuntoS.txt");
        ConjuntoTxt.longitudMatriz();
	ConjuntoPxt.longitudMatriz();
        ConjuntoTxt.relacionarArchivo();
	ConjuntoPxt.relacionarArchivo();
        Graficar demo = new Graficar("Grafica de Caja Conjunto T",ConjuntoTxt.mostrarMatriz());
        demo.pack();
        RefineryUtilities.centerFrameOnScreen(demo);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        demo.setVisible(true);
        Graficar demos = new Graficar("Grafica de Caja Conjunto S",ConjuntoPxt.mostrarMatriz());
        demos.pack();
        RefineryUtilities.centerFrameOnScreen(demos);
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        demos.setVisible(true);
}
// TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void Reset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reset1ActionPerformed

    // TODO add your handling code here:
    NumVecinos a=null;  
    NumFolds as=null;
    ConjuntoT=null;
    ConjuntoP=null;
    Vecinos=0;
    opciones=0;
    banderaConT=0;
    banderaConP=0;
    banderaPrueba=0;
    banderaVecinos=0;
    Consola.setText("");
    Vecinoscnn=null;
    as=null;
    arregloIndices=null;
    ConjuntoS=null;
    ConjuntoT="";
    ConjuntoP="";
    banderaGrafica=0;
    presicionPvsT="";
    presicionPvsS="";
    numeroElementosS=0;
    banderaConS=0;
    }//GEN-LAST:event_Reset1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaNumUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaNumUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaNumUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaNumUno.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaNumUno().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Archivo;
    private javax.swing.JButton BotonStart;
    private javax.swing.JTextArea Consola;
    private javax.swing.JButton Reset1;
    private javax.swing.JButton Salir1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
